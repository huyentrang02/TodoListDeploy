{"version":3,"sources":["components/TodoList/index.jsx","components/AddNewTodo/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoList","todos","setShowAdd","showAdd","deleteTodo","setEditing","setNextLevel","setNewTodos","level","filter","setFilter","filterList","setFilterList","getColor","useState","sort","setSort","textSearch","setTextSearch","filterLevel","setFilterLevel","useEffect","sorted","length","newTodo","a","b","id","name","findIndex","item","className","onClick","indexOf","type","onChange","e","target","value","console","log","map","todo","index","uudi","AddNewTodo","setTodos","editing","setNewTodo","isEdit","setIsEdit","showAlert","setShowAlert","onChangeTodo","htmlFor","hidden","trim","App","localStorageData","JSON","parse","localStorage","getItem","setItem","stringify","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4bdb7df.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './todoList.css'\r\n\r\nconst TodoList = ({todos, setShowAdd, showAdd, deleteTodo, setEditing, setNextLevel, setNewTodos, filter, setFilter, level, filterList, setFilterList}) => {\r\n\r\n    const getColor = (level) => {\r\n        if (level === \"Làm ngay\") return \"danger\"\r\n        else if (level === \"Phải làm\") return \"warning\"\r\n        else if (level === \"Làm bao giờ cũng được\") return \"success\"\r\n        else if (level === \"Không làm chẳng sao\") return \"primary\"\r\n    }\r\n\r\n    const [sort, setSort] = useState(false)\r\n    const [textSearch, setTextSearch] = useState(\"\")\r\n    const [filterLevel, setFilterLevel] = useState(\"Làm ngay\")\r\n\r\n    useEffect(() => {\r\n        sorted()\r\n    }, [todos.length])\r\n\r\n    const sorted = () => {\r\n        const newTodo = [...todos]\r\n        if (sort === \"Sắp xếp theo ID\"){\r\n            newTodo.sort((a,b) =>{\r\n                return a.id > b.id ? 1: -1\r\n            })\r\n        }\r\n        else if (sort === \"Sắp xếp theo Tên\"){\r\n            newTodo.sort((a,b) =>{\r\n                return a.name > b.name ? 1: -1\r\n            })\r\n        }\r\n        else if (sort === \"Sắp xếp theo mức độ\"){\r\n            newTodo.sort((a,b) => {\r\n                const indexA = level.findIndex(item => item === a.level)\r\n                const indexB = level.findIndex(item => item === b.level)\r\n                return indexA > indexB ? 1: -1\r\n            })\r\n        }\r\n        setNewTodos(newTodo)\r\n    }\r\n\r\n    const onChangeSort = (e) => {\r\n        setSort(e.target.value)\r\n        console.log(sort);\r\n    }\r\n\r\n    const onChangeSearch = (e) => {\r\n       setTextSearch(e.target.value)\r\n    }\r\n\r\n    const Search = () => {\r\n        setFilterList(todos.filter(\r\n            function(item){\r\n                return item.name.indexOf(textSearch) !== -1 || item.level.indexOf(textSearch) !== -1\r\n            }\r\n\r\n        ))\r\n    }\r\n\r\n    const onChangeFilterLevel = (e) => {\r\n        setFilterLevel(e.target.value);\r\n    }\r\n\r\n    const solveFilterLevel = () =>{\r\n        if (filterLevel === 'Tất cả' ) setFilterList(todos)\r\n        else setFilterList(todos.filter(item => item.level === filterLevel))\r\n    }\r\n\r\n    return (\r\n        <div className=\"to-do-list\">\r\n            <div>\r\n                <button onClick={() => setShowAdd(!showAdd)} className=\"btn-add\" >ADD NEW TODOS</button>\r\n                <button className=\"btn-search\" onClick={Search}>SEARCH BY TEXT</button>\r\n                <input type=\"text\" className=\"search\" onChange={onChangeSearch} />\r\n                <br/>\r\n                <select name=\"sort\" id=\"sort\" onChange={onChangeSort} value={sort}>\r\n                    <option value=\"Sắp xếp theo ID\">Sort by id</option>\r\n                    <option value=\"Sắp xếp theo Tên\">Sort by name</option>\r\n                    <option value=\"Sắp xếp theo mức độ\">Sort by level</option>\r\n                </select>\r\n                <button id=\"btn-sort\" onClick={() => sorted()}>SORT</button>\r\n                <button onClick={() => solveFilterLevel(filterLevel)} className=\"btn-search\" >SEARCH BY LEVEL</button>\r\n                <select onChange={onChangeFilterLevel} className=\"search\">\r\n                    <option value=\"Tất cả\">Tất cả</option>\r\n                    <option value=\"Làm ngay\">Làm ngay</option>\r\n                    <option value=\"Phải làm\">Phải làm</option>\r\n                    <option value=\"Làm bao giờ cũng được\">Làm bao giờ cũng được</option>\r\n                    <option value=\"Không làm chẳng sao\">Không làm chẳng sao </option>\r\n                </select>\r\n            </div>\r\n            {   \r\n                todos.length === 0 ? <p>No todos</p>:\r\n                <table>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Level</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    {\r\n                        filterList.map((todo, index) => {\r\n                            return(\r\n                                <>\r\n                                    <tr key={`${todo.id}`}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{todo.name}</td>\r\n                                        <td>\r\n                                            {/* <Badge bg = {getColor(todo.level) } onClick={() => setNextLevel(todo.id)} >{todo.level}</Badge> */}\r\n                                            <span className = {getColor(todo.level)} onClick={() => setNextLevel(todo.id)} >\r\n                                            {todo.level}\r\n                                            </span>\r\n                                            \r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"btn-group\">\r\n                                                <button onClick={() => setEditing(todo)} >FIX</button>\r\n                                                <button onClick={() => deleteTodo(todo.id)}>DELETE</button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            )\r\n                        })     \r\n                    }      \r\n                </table>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\nimport TodoList from '../TodoList';\r\nimport './addNewTodo.css'\r\n\r\nlet uudi = 1;\r\n\r\nexport default function AddNewTodo({\r\n    todos, setTodos, setNewTodos, setShowAdd, editing, setEditing, filterList\r\n})\r\n{   \r\n    const [newTodo, setNewTodo] = useState({\r\n        id: 0,\r\n        name: '',\r\n        level: 'Làm ngay'\r\n    })\r\n\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (editing !== null){\r\n            setNewTodo(editing)\r\n            setIsEdit(true)\r\n        }\r\n    }, [editing])\r\n\r\n    const onChangeTodo = (e) => {\r\n        const {name, value} = e.target;\r\n        setNewTodo({\r\n            ...newTodo,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    console.log(newTodo);\r\n\r\n    const addNewTodo = () => {\r\n        if (newTodo.name.trim() === ''){\r\n            setShowAlert(false)\r\n            return\r\n        }\r\n        newTodo.id = uudi\r\n        setNewTodos([...todos, newTodo])\r\n        uudi += 1\r\n        setNewTodo({\r\n            id: 0,\r\n            name: '',\r\n            level: 'Làm ngay'\r\n        })\r\n        setShowAlert(true)\r\n    }\r\n    \r\n    const handleEdit = () => {\r\n        if (newTodo.name.trim() === ''){\r\n            setShowAlert(false)\r\n            return\r\n        }\r\n        const index = todos.findIndex(todo => todo.id === newTodo.id)\r\n        todos[index] = newTodo\r\n        setNewTodo({\r\n            id: 0,\r\n            name: '',\r\n            level: 'Làm ngay'\r\n        })\r\n        setIsEdit(false)\r\n        setEditing(null)\r\n        setNewTodos([...todos])\r\n        setShowAlert(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"add-new-todo\">\r\n            \r\n                <span onClick={() => setShowAdd(false)} className=\"close\">X</span>\r\n                <h5 className=\"edit-text\">{isEdit ? 'Fix todos:' : 'Add new todos:'}</h5>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" name=\"name\" id=\"level\" value={newTodo.name} onChange={onChangeTodo}/>\r\n                <span hidden={showAlert} className=\"alert\">Not Empty!</span>\r\n                <label htmlFor=\"level\">Level:</label>\r\n                <select name=\"level\" id=\"level\" value={newTodo.level} onChange={onChangeTodo}>\r\n                    <option value=\"Làm ngay\">Làm ngay</option>\r\n                    <option value=\"Phải làm\">Phải làm</option>\r\n                    <option value=\"Làm bao giờ cũng được\">Làm bao giờ cũng được</option>\r\n                    <option value=\"Không làm chẳng sao\">Không làm chẳng sao</option>\r\n                </select>\r\n                <div className=\"btn-group\">\r\n                    <button onClick={isEdit ? handleEdit : addNewTodo}  className=\"ahover\">\r\n                        {isEdit ? 'FIX' : 'ADD'}\r\n                    </button>\r\n                    <button onClick={() => setShowAdd(false)}  className=\"ahover\">DELETE</button>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","\r\n//import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport AddNewTodo from './components/AddNewTodo'\r\nimport TodoList from './components/TodoList'\r\nimport './style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  let localStorageData = JSON.parse(localStorage.getItem('todos'))\r\n  const [todos, setTodos] = useState(localStorageData === null ? [] : localStorageData)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [editing, setEditing] = useState(null)\r\n  const [filter, setFilter] = useState('all')\r\n  const [filterList, setFilterList] = useState(todos)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n    setFilterList(todos)\r\n  }, [todos])\r\n\r\n  \r\n\r\n  const level = [\r\n    \"Làm ngay\",\r\n    \"Phải làm\",\r\n    \"Làm bao giờ cũng được\",\r\n    \"Không làm chẳng sao\"\r\n  ]\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n  \r\n  const setNextLevel = (id) => {\r\n    const newTodo = [...todos]\r\n    const index = newTodo.findIndex(todo => todo.id === id)\r\n    if (newTodo[index].level === \"Làm ngay\") newTodo[index].level = \"Phải làm\"\r\n    else if (newTodo[index].level === \"Phải làm\") newTodo[index].level = \"Làm bao giờ cũng được\"\r\n    else if (newTodo[index].level  === \"Làm bao giờ cũng được\") newTodo[index].level = \"Không làm chẳng sao\"\r\n    else if (newTodo[index].level  === \"Không làm chẳng sao\") newTodo[index].level = \"Làm ngay\"\r\n    setTodos(newTodo)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div class=\"box\">\r\n        <p class=\"decoration\">To Do List - Team Web D19</p>\r\n        <div class=\"de-table\">\r\n          {showAdd ? <AddNewTodo setNewTodos={setTodos} todos={todos} setShowAdd={setShowAdd} setEditing={setEditing} editing={editing}/> : null}  \r\n          <div class=\"show-add\"> \r\n          <TodoList filterList={filterList} setFilterList={setFilterList} level={level} filter={filter} setFilter={setFilter} setNewTodos={setTodos} \r\n                    todos={todos} setShowAdd={setShowAdd} showAdd={showAdd} deleteTodo={deleteTodo} setEditing={setEditing} setNextLevel={setNextLevel}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}